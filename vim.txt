配置文件:
当前用户home目录下.vimrc文件(局部,即作用当前用户)
/etc/vim/vimrc(乌班图)或/etc/vimrc(centos 7)




打开方式：
#vim 文件路径    打开指定文件
#vim +数字 文件路径    打开指定文件,并将光标移动到指定行
#vim +/关键字 文件路径    打开指定文件,并高亮显示关键字
#vim 文件路径1 文件路径2 文件路径3    同时打开多个文件
#vim -On 文件路径1 文件路径2    左右分屏打开(o是大写的,n为数字表示分屏的数量,要大于等于文件数量)
#vim -on 文件路径1 文件路径2    上下分屏打开(o是小写的)

文件操作：
	:files    查看打开文件(%a表示a=active,表示当前正在打开的文件；#表示上个打开的文件)
	:open 文件名    切换文件
	:bn    (back next)切换到下一个打开的文件
	:bp    (back prev, previous)切换到上一个打开的文件




分屏：
	取消:
		:only
	关闭：
		_Ctrl + w c
		_Ctrl + w q

	打开：
		:vs 或 _Ctrl + w s    上下分割当前打开的文件
		:sp 或 _Ctrl + w v    左右分割当前打开的文件
		:split 路径/文件名    上下分割，并打开一个新的文件(命令可简写sp)
		:vsplit 路径/文件名    左右分割，并打开一个新的文件(命令可简写vsp)
		
	移动:(与方向键配合)
		光标：(方向键小写)
		Ctrl + w l    把光标移到右边的屏中
		Ctrl + w h    把光标移到左边的屏中
		Ctrl + w k    把光标移到上边的屏中
		Ctrl + w j    把光标移到下边的屏中
		屏幕：(方向键大写)
		Ctrl + w L    将光标所在屏移到右边
		Ctrl + w H    将光标所在屏移到左边
		Ctrl + w K    将光标所在屏移到上边
		Ctrl + w J    将光标所在屏移到下边

	同步移动:
		:set scb    同步移动屏幕
		:set scb!    非同步移动
		
	宽高：
		Ctrl + w =    等宽/等高

		Ctrl + w -    减小高度
		Ctrl + w +    增加高度

		Ctrl + w <    减少宽度
		Ctrl + w >    增加宽度

		Ctrl + w |    最大宽度
		Ctrl + w _    最大高度

锁定屏幕:
	Ctrl + Q    解锁屏幕 
	Ctrl + S    锁定屏幕



方向：
	h    即←
	j    即↓
	k    即↑
	l    即→

光标的移动：
	移动到行首：shift+6    即 ^
	移动到行首：数字0
	移动到行尾：shift+4    即$
	移动到首行：gg
	移动到行尾：G(大写)
	移动到第x行：xG    (n为常数,按数字后按G)
	移动上\下n行：n方向键   (n为常数,向方向移动n行)
	移动左\右n宽：n方向键   (n为常数,向方向移动n宽)

	(大写移动一段‘空格间隔为一段’，小写移动一单词)
	移动到前一个单词的 开头: b/B
	移动到后一个单词的 开头: w/B
	移动到前一个单词的 结尾: ge (两个都要按)
	移动到后一个单词的 结尾: e/E
	

	向上翻一屏：_Ctrl+b/B(快捷键)大小写效果相同
	向下翻一屏：_Ctrl+f/F(快捷键)大小写效果相同

	向上翻半屏：_Ctrl+u(快捷键)
	向下翻半屏：_Ctrl+d(快捷键)

	移动到对应括号:%	
	
	


复制：（p是粘贴）
	复制：ny方向   (n为常数,按数字后按y在按方向即可复制对应的值,左右不含光标所在字符,上下则所按的行数加1)
	复制所在行：yy
	复制n行：nyy     (n为常数,按数字后按yy)
	区块复制：_Ctrl+v    (快捷键)



剪切\删除：（p是粘贴）
	剪切\删除所在行(含换行)：dd    (剪切和删除区别在于粘贴与否)
	剪切\删除n行：ndd    (n为常数,按数字后按dd)
	剪切\删除当前行光标之后的字符：x
	剪切\删除当前行光标之后n个字符：nx (n为常数,按数字后按x)
	剪切\删除当前行光标之前的字符：X(大写)
	剪切\删除当前行光标之前n个字符：nX (n为常数,按数字后按X)
	剪切\删除当前光标所在单词:dw
	剪切\删除光标后的字符(含光标)：D    (大写)
	剪切\删除光标前的字符(不含光标)：d0    (小写D,数字0)
	


撤销\恢复:
	撤销：u(undo)
	重做：_Ctrl+r(快捷键)

格式化代码(自动对齐)
	gg=G

保存并退出:
	ZZ(大写)

搜索:
	*    向下查找光标所在单词
	#    向上查找光标所在单词

文本行移动:(类似缩进)
	<<    左移动
	>>    右移动

查看函数手册:
	K或nK    查看光标所在函数的手册(n为常数指定在哪一章手册)

查看宏:
	[d    查看光标所在宏的定义,   待验证(对自定义函数也适用)





命令模式：

保存：（write）
	:w    保存
	:w 路径    另存为
	
退出：
	:q    退出文件 

强制执行:
	!    (与其他配合使用)

调用外部命令:
	:!外部命令

搜索:
	/要查找的字符串    向下查找指定字符\字符串(查找的内容会高亮显示)
	?要查找的字符串    向上查找指定字符\字符串
	在搜索结果中上一个下一个:N\n（大写为上,小写下）
	:nohl    (no highlight)取消搜索后遗留下来个高亮

替换：
	语法：[range]s[ubstitute]/{pattern}/{string}/[flags]
	:s/搜索的内容/新的内容    替换光标所在行的 第一处 符合条件的内容
	:s/搜索的内容/新的内容/g    替换光标所在行 所有 符合条件的内容
	:%s/搜索的内容/新的内容    替换整个文档 每行 第一处 符合条件的内容
	:%s/搜索的内容/新的内容/g    替换整个文档  所有 符合条件的内容
	:%s/搜索的内容/新的内容/gc    替换整个文档  所有 符合条件的内容,加了c后每次需要用户确认
	:n,ms/搜索的内容/新的内容/g    替换从 n到m行 内的 所有 匹配内容(#号可以暂代/)
%    表示整个文档，g表示全局（global）

显示行号:
	set nu    (number)显示行号
	:set nonu    取消行号

代码着色：
	:syntax no    显示着色
	:syntax off    关闭着色



编辑模式：
	i    (insert)在光标所在 字符 前 插入(常用)
	a    (after)在光标所在 字符 后 插入(常用)
	o    在光标所在行的下面另起一行插入
	r    替换光标所在位置的一个字符
	s    删除光标所在字符并插入
	cc   清除当前行内容并进入插入模式 (cw可以清除一个单词并进入插入模式，其他同样)

	上面的是小写的,下面的是大写的

	I    在光标所在行的 行首 插入
	A    在光标所在行的 行尾 插入
	O    在光标所在行的上面另起一行插入
	R    改写模式插入	
	S    删除光标所在 行 并插入
	C    清除光标所在位置有后的内容并进入插入模式
































